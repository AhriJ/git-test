{
  "inode": {
    "org": "",
    "id": "cmdb_mpage-3uudl0qofsiyn",
    "schema_id": "cmdb_schema_mpage-1",
    "name": "org-structure相关配置（升级忽略）",
    "namespace": "",
    "descr": "",
    "ctime": 0,
    "mtime": 0,
    "creator": "",
    "last_editor": "",
    "archived": false,
    "lock": ""
  },
  "data": {
    "publics": {
      "state.input.list.1": "NOT_EXPORTED",
      "state.input.list.2": "NOT_EXPORTED",
      "state.input.list.3": "NOT_EXPORTED",
      "state.input.list.4": "NOT_EXPORTED",
      "state.input.list.5": "NOT_EXPORTED",
      "state.input.list.6": "NOT_EXPORTED",
      "state.input.list.7": "NOT_EXPORTED",
      "state.input.list.8": "NOT_EXPORTED",
      "state.input.list.9": "NOT_EXPORTED",
      "state.input.list.10": "NOT_EXPORTED",
      "state.input.list.11": "NOT_EXPORTED",
      "state.input.list.12": "NOT_EXPORTED",
      "state.input.list.13": "NOT_EXPORTED",
      "state.input.list.14": "NOT_EXPORTED",
      "state.input.list.15": "NOT_EXPORTED",
      "state.input.list.16": "NOT_EXPORTED",
      "state.input.list.17": "NOT_EXPORTED",
      "state.input.list.18": "NOT_EXPORTED",
      "state.input.list.19": "NOT_EXPORTED",
      "state.input.list.20": "NOT_EXPORTED",
      "state.input.list.21": "NOT_EXPORTED",
      "state.input.list.22": "NOT_EXPORTED",
      "state.input.list.23": "NOT_EXPORTED",
      "state.input.list.24": "NOT_EXPORTED"
    },
    "config": {
      "resId": "cmdb_workflow-4uedtiggetan",
      "style": {},
      "jump": {
        "vars": []
      },
      "mind": {
        "children": []
      }
    },
    "state": {
      "onSuccess": [],
      "onFail": [],
      "input": {
        "list": [
          "{\"inode\":{\"id\":\"cmdb_workflow-1uaacrzb09iu0\",\"schema_id\":\"cmdb_schema_workflow-0\",\"name\":\"[系统] 从 LDAP 同步用户账户对象\",\"namespace\":\"/User-Permits\"},\"data\":{\"edges\":[{\"from\":\"拉取LDAP用户条目\",\"to\":\"同步用户账户\"},{\"from\":\"同步用户账户\",\"to\":\"__END__\"},{\"from\":\"__START__\",\"to\":\"获取LDAP配置\"},{\"from\":\"获取LDAP配置\",\"to\":\"拉取LDAP用户条目\"}],\"icon\":\"\",\"nodes\":[{\"inputs\":{\"*\":{\"ldap_auth_id\":\"cmdb_third_party_auth-ldap_default\",\"ldap_user_filter\":\"(objectClass=organizationalPerson)\",\"user_account_schema\":\"cmdb_schema_x-d97uo84ongx8\"}},\"merge\":{\"enable\":false},\"name\":\"__START__\",\"settings\":{},\"auto_run\":true,\"component\":\"cmdb_component-vars\",\"config\":{\"schema\":\"{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"ldap_auth_id\\\":{\\\"type\\\":\\\"string\\\",\\\"title\\\":\\\"LDAP 配置对象\\\"},\\\"ldap_user_filter\\\":{\\\"type\\\":\\\"string\\\",\\\"title\\\":\\\"LDAP 用户过滤条件\\\"},\\\"user_account_schema\\\":{\\\"type\\\":\\\"string\\\",\\\"title\\\":\\\"用户账户模型\\\"}},\\\"required\\\":[\\\"ldap_user_filter\\\",\\\"ldap_auth_id\\\",\\\"user_account_schema\\\"],\\\"title\\\":\\\"运行参数\\\"}\"},\"descr\":\"自定义表单\"},{\"auto_run\":true,\"component\":\"cmdb_component-vars\",\"config\":{\"schema\":\"{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"result\\\":{\\\"type\\\":\\\"string\\\",\\\"title\\\":\\\"运行结果\\\"},\\\"message\\\":{\\\"type\\\":\\\"string\\\",\\\"title\\\":\\\"返回信息\\\"}},\\\"title\\\":\\\"返回数据\\\",\\\"required\\\":[\\\"result\\\",\\\"message\\\"]}\"},\"descr\":\"自定义表单\",\"inputs\":{\"同步用户账户\":{\"message\":\"{var:同步用户账户.output.message}\",\"result\":\"{var:同步用户账户.output.result}\"}},\"name\":\"__END__\",\"settings\":{}},{\"config\":{},\"descr\":\"LDAP-Search\",\"inputs\":{\"*\":{\"attributes\":[\"dn\"]},\"获取LDAP配置\":{\"attributes\":[\"dn\",\"mail\",\"sn\",\"cn\",\"sAMAccountName\"],\"base_dn\":\"{var:获取LDAP配置.output.objects.#0.data.ldap_auth.base_dn}\",\"bind_dn\":\"{var:获取LDAP配置.output.objects.#0.data.ldap_auth.bind_dn}\",\"bind_password\":\"{var:获取LDAP配置.output.objects.#0.data.ldap_auth.bind_password}\",\"server_name\":\"{var:获取LDAP配置.output.objects.#0.data.ldap_auth.server_name}\",\"enable_ssl\":\"{var:获取LDAP配置.output.objects.#0.data.ldap_auth.use_ssl}\",\"endpoint\":\"{var:获取LDAP配置.output.objects.#0.data.ldap_auth.endpoint}\",\"insecure_skip_verify\":\"{var:获取LDAP配置.output.objects.#0.data.ldap_auth.insecure_skip_verify}\",\"search_filter\":\"{var:__START__.output.ldap_user_filter}\"}},\"merge\":{\"enable\":false},\"name\":\"拉取LDAP用户条目\",\"settings\":{},\"auto_run\":true,\"component\":\"cmdb_component-ldap_search\"},{\"merge\":{\"enable\":false},\"name\":\"同步用户账户\",\"settings\":{},\"auto_run\":true,\"component\":\"cmdb_component-interpreter_ecmascript\",\"config\":{\"input_schema\":\"{\\\"type\\\":\\\"object\\\",\\\"title\\\":\\\"运行参数\\\",\\\"properties\\\":{\\\"ldap_auth_id\\\":{\\\"type\\\":\\\"string\\\",\\\"title\\\":\\\"TPA 认证配置\\\"},\\\"user_account_schema\\\":{\\\"type\\\":\\\"string\\\",\\\"title\\\":\\\"用户账户模型\\\"},\\\"auto_remove_user\\\":{\\\"type\\\":\\\"boolean\\\",\\\"title\\\":\\\"自动移除用户\\\"},\\\"auto_create_user\\\":{\\\"type\\\":\\\"boolean\\\",\\\"title\\\":\\\"自动创建用户\\\"},\\\"forbidden_new_user\\\":{\\\"type\\\":\\\"boolean\\\",\\\"title\\\":\\\"禁用新用户\\\"},\\\"ldap_user_attributes\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"id\\\":{\\\"type\\\":\\\"string\\\"},\\\"name\\\":{\\\"type\\\":\\\"string\\\"},\\\"mail\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"id\\\",\\\"name\\\",\\\"mail\\\"],\\\"title\\\":\\\"LDAP用户字段映射\\\"},\\\"default_organizations\\\":{\\\"type\\\":\\\"array\\\",\\\"items\\\":{\\\"type\\\":\\\"string\\\"},\\\"title\\\":\\\"默认授权\\\"},\\\"ldap_user_entries\\\":{\\\"type\\\":\\\"array\\\",\\\"items\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"dn\\\":{\\\"type\\\":\\\"string\\\"},\\\"attributes\\\":{\\\"type\\\":\\\"array\\\",\\\"items\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"name\\\":{\\\"type\\\":\\\"string\\\"},\\\"values\\\":{\\\"type\\\":\\\"array\\\",\\\"items\\\":{\\\"type\\\":\\\"string\\\"}}},\\\"required\\\":[\\\"name\\\",\\\"values\\\"]}}},\\\"required\\\":[\\\"dn\\\",\\\"attributes\\\"]},\\\"title\\\":\\\"LDAP用户条目\\\"}},\\\"required\\\":[\\\"ldap_auth_id\\\",\\\"user_account_schema\\\",\\\"ldap_user_attributes\\\",\\\"ldap_user_entries\\\"]}\",\"output_schema\":\"{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"result\\\":{\\\"type\\\":\\\"string\\\",\\\"title\\\":\\\"运行结果\\\"},\\\"message\\\":{\\\"type\\\":\\\"string\\\",\\\"title\\\":\\\"返回信息\\\"}},\\\"title\\\":\\\"返回数据\\\",\\\"required\\\":[\\\"result\\\",\\\"message\\\"]}\",\"script\":\"/*\\n此代码片段用于将 LDAP \\\"用户\\\" 同步到 \\\"用户\\\"，并自动设置 \\\"用户\\\" 相关的字段。\\n\\n要求：\\n1. \\\"用户\\\" 对象模型中必须包含以下索引字段：\\n    1.1 cmdb_index-third_party_auth\\n    1.2 cmdb_index-forbidden\\n    1.3 cmdb_index-account_username\\n    1.4 cmdb_index-sys_account\\n    1.5 cmdb_index-organizations\\n\\n输入参数：\\n{\\n    \\\"ldap_auth_id\\\": \\\"\\\",\\n    \\\"user_account_schema\\\": \\\"\\\",\\n    \\\"auto_remove_user\\\": \u003cbool\u003e,\\n    \\\"auto_create_user\\\": \u003cbool\u003e,\\n    \\\"forbidden_new_user\\\": \u003cbool\u003e,\\n    \\\"ldap_user_attributes\\\": {\\n        \\\"id\\\": \\\"\\\",\\n        \\\"name\\\": \\\"\\\",\\n        \\\"mail\\\": \\\"\\\"\\n    },\\n    \\\"default_organizations\\\": [],\\n    \\\"ldap_user_entries\\\": [{\\n        \\\"dn\\\": \\\"\\\",\\n        \\\"attributes\\\": [{\\n            \\\"name\\\": \\\"\\\",\\n            \\\"values\\\": [\\\"\\\"]\\n        }]\\n    }]\\n}\\n*/\\n\\nvar ctx = new WorkflowRuntimeContext();\\nvar input = ctx.input();\\nvar ecu = ctx.getECU();\\n\\n// 解析输入参数\\nldap_auth_id = input.ldap_auth_id?input.ldap_auth_id:\\\"cmdb_third_party_auth-ldap_default\\\"\\nuser_account_schema = input.user_account_schema?input.user_account_schema:\\\"cmdb_schema_user_account-0\\\"\\nauto_remove_user = input.auto_remove_user?input.auto_remove_user:false\\nauto_create_user = input.auto_create_user?input.auto_create_user:false\\nforbidden_new_user = input.forbidden_new_user?input.forbidden_new_user:false\\n\\nldap_user_id = \\\"\\\"\\nldap_user_name = \\\"\\\"\\nldap_user_mail = \\\"\\\"\\nif (input.ldap_user_attributes) {\\n    attrs = input.ldap_user_attributes\\n    ldap_user_id = attrs.id\\n    ldap_user_name = attrs.name\\n    ldap_user_mail = attrs.mail\\n}\\nldap_user_id = ldap_user_id?ldap_user_id:\\\"cn\\\"\\nldap_user_name = ldap_user_name?ldap_user_name:\\\"sn\\\"\\nldap_user_mail = ldap_user_mail?ldap_user_mail:\\\"mail\\\"\\ndefault_organizations = input.default_organizations?input.default_organizations:[]\\nldap_user_entries = input.ldap_user_entries\\n\\n// 执行同步\\nldapUsers = []\\nldap_user_entries.forEach(function(entry){\\n    ldapUser = {}\\n    ldapUser.dn = entry.dn\\n    entry.attributes.forEach(function(attr){\\n        if (!attr.values || attr.values.length == 0) {\\n            return\\n        }\\n        if (attr.name == ldap_user_id) {\\n            ldapUser.username = attr.values[0]\\n        }\\n        if (attr.name == ldap_user_name) {\\n            ldapUser.nickname = attr.values[0]\\n        }\\n        if (attr.name == ldap_user_mail) {\\n            ldapUser.mail = attr.values[0]\\n        }\\n    })\\n    ldapUsers.push(ldapUser)\\n})\\n\\nuserAccounts = []\\nuserAccountsDict = {}\\nuserAccountQuery = {\\n    conditions: [\\n        {field: \\\".inode.schema_id\\\", op: \\\"=\\\", value: user_account_schema},\\n        {field: \\\".indexes.cmdb_index-third_party_auth\\\", op:\\\"=\\\", value: ldap_auth_id},\\n    ],\\n    objects: [\\\"$conditions\\\"], selects: [\\n        \\\".inode.name\\\",\\n        \\\".indexes.cmdb_index-third_party_auth\\\",\\n        \\\".indexes.cmdb_index-organizations\\\",\\n        \\\".indexes.cmdb_index-account_username\\\",\\n    ],\\n}\\nresult = ecu.queryObjects(userAccountQuery)\\nresult.objects.forEach(function(object){\\n    userAccount = {}\\n    userAccount.id = object.inode.id\\n    userAccount.nickname = object.inode.name\\n    tpa = object.indexes[\\\"cmdb_index-third_party_auth\\\"]\\n    if (tpa) {\\n        userAccount.tpa = tpa.inode.id\\n    }\\n    username = object.indexes[\\\"cmdb_index-account_username\\\"]\\n    userAccount.username = username?username:\\\"\\\"\\n    userAccounts.push(userAccount)\\n    userAccountsDict[userAccount.username] = userAccount\\n})\\n\\n// 比对用户列表，对齐\\nuserCreateList = []\\nldapUsers.forEach(function(ldapUser){\\n    userAccount = userAccountsDict[ldapUser.username]\\n    if (userAccount) {\\n        delete userAccountsDict[ldapUser.username]\\n        return\\n    }\\n    userAccountObject = {\\n        inode: {\\n            name: ldapUser.nickname,\\n            schema_id: user_account_schema,\\n        },\\n        data: {\\n            email: ldapUser.mail,\\n        },\\n        indexes: {\\n            \\\"cmdb_index-third_party_auth\\\": ldap_auth_id,\\n            \\\"cmdb_index-account_username\\\": ldapUser.username,\\n            \\\"cmdb_index-organizations\\\": default_organizations,\\n            \\\"cmdb_index-forbidden\\\": forbidden_new_user,\\n        },\\n    }\\n    userCreateList.push(userAccountObject)\\n    delete userAccountsDict[ldapUser.username]\\n})\\n\\nuserRemoveList = []\\nfor (userId in userAccountsDict) {\\n    userAccount = userAccountsDict[userId]\\n    userRemoveList.push(userAccount.id)\\n}\\n\\nif (auto_create_user \u0026\u0026 userCreateList.length \u003e 0) {\\n    ecu.createObjects(userCreateList)\\n}\\n\\nif (auto_remove_user \u0026\u0026 userRemoveList.length \u003e 0) {\\n    archiveQuery = {\\n        conditions: [{\\n            field: \\\".inode.schema_id\\\", op: \\\"=\\\", value: user_account_schema,\\n        }],\\n        objects: userRemoveList,\\n    }\\n    userAccountUpdate = {\\n        object: {\\n            inode: {archived: true},\\n        },\\n        updates: [\\\".inode.archived\\\"],\\n    }\\n    ecu.updateObjects(archiveQuery, userAccountUpdate)\\n}\\n\\n// 扩展函数：根据 ldapUser 中的信息，给 userAccount 设置特定的字段，\\n// 例如通过 ldapUser 中的 dn 字段自动设置 userAccount 中的 \\\"所属部门\\\" 字段\\nfunction setUserAccountFields(ldapUser, userAccount) {\\n    // TODO\\n    return\\n}\\nctx.output({\\\"result\\\":\\\"success\\\",\\\"message\\\":\\\"执行成功\\\"})\",\"timeout_s\":30},\"descr\":\"ES2015 解析组件\",\"inputs\":{\"拉取LDAP用户条目\":{\"ldap_auth_id\":\"{var:__START__.output.ldap_auth_id}\",\"ldap_user_attributes\":{\"email\":\"email\",\"id\":\"cn\",\"mail\":\"mail\",\"name\":\"cn\"},\"ldap_user_entries\":\"{var:拉取LDAP用户条目.output.entries}\",\"user_account_schema\":\"{var:__START__.output.user_account_schema}\",\"auto_create_user\":true,\"auto_remove_user\":true,\"forbidden_new_user\":true}}},{\"name\":\"获取LDAP配置\",\"settings\":{},\"auto_run\":true,\"component\":\"cmdb_component-cmdb_querier\",\"config\":{\"query\":\"{\\\"conditions\\\":[{\\\"field\\\":\\\".inode.schema_id\\\",\\\"op\\\":\\\"=-\\\",\\\"value\\\":{\\\"conditions\\\":[{\\\"field\\\":\\\".inode.schema_id\\\",\\\"op\\\":\\\"=-\\\",\\\"value\\\":[\\\"cmdb_schema_schema_x-0\\\"]}],\\\"objects\\\":[\\\"cmdb_schema_third_party_auth-0\\\"],\\\"sorts\\\":[],\\\"limit\\\":50,\\\"offset\\\":0,\\\"multi\\\":true,\\\"selects\\\":[\\\".inode.name\\\",\\\".inode.schema_id\\\",\\\".inode.lock\\\",\\\".inode.mtime\\\",\\\".inode.last_editor\\\"],\\\"comment\\\":\\\"\\\",\\\"function\\\":\\\"db\\\",\\\"vars\\\":{}}}],\\\"objects\\\":[\\\"$conditions\\\"],\\\"sorts\\\":[],\\\"limit\\\":50,\\\"offset\\\":0,\\\"multi\\\":true,\\\"selects\\\":[\\\".data.ldap_auth\\\"],\\\"comment\\\":\\\"\\\",\\\"function\\\":\\\"db\\\",\\\"vars\\\":{}}\"},\"descr\":\"查询 CMDB 对象\",\"inputs\":{\"*\":{\"query\":\"\"},\"__START__\":{\"query\":\"{\\n    \\\"conditions\\\": [\\n        {\\n            \\\"field\\\": \\\".inode.schema_id\\\",\\n            \\\"op\\\": \\\"=-\\\",\\n            \\\"value\\\": {\\n                \\\"conditions\\\": [\\n                    {\\n                        \\\"field\\\": \\\".inode.schema_id\\\",\\n                        \\\"op\\\": \\\"=-\\\",\\n                        \\\"value\\\": [\\n                            \\\"cmdb_schema_schema_x-0\\\"\\n                        ]\\n                    }\\n                ],\\n                \\\"objects\\\": [\\n                    \\\"cmdb_schema_third_party_auth-0\\\"\\n                ],\\n                \\\"sorts\\\": [],\\n                \\\"limit\\\": 50,\\n                \\\"offset\\\": 0,\\n                \\\"multi\\\": true,\\n                \\\"selects\\\": [\\n                    \\\".inode.name\\\",\\n                    \\\".inode.schema_id\\\",\\n                    \\\".inode.lock\\\",\\n                    \\\".inode.mtime\\\",\\n                    \\\".inode.last_editor\\\"\\n                ],\\n                \\\"comment\\\": \\\"\\\",\\n                \\\"function\\\": \\\"db\\\",\\n                \\\"vars\\\": {}\\n            }\\n        }\\n    ],\\n    \\\"objects\\\": [\\n        \\\"{var:__START__.output.ldap_auth_id}\\\"\\n    ],\\n    \\\"sorts\\\": [],\\n    \\\"limit\\\": 50,\\n    \\\"offset\\\": 0,\\n    \\\"multi\\\": true,\\n    \\\"selects\\\": [\\n        \\\".data.ldap_auth\\\"\\n    ],\\n    \\\"comment\\\": \\\"\\\",\\n    \\\"function\\\": \\\"db\\\",\\n    \\\"vars\\\": {}\\n}\"}}}]},\"indexes\":{}}",
          "{\"inode\":{\"id\":\"cmdb_workflow-fb9fa1a19oq8\",\"schema_id\":\"cmdb_schema_workflow-0\",\"name\":\"[系统/定时] 执行 LDAP 用户同步\",\"namespace\":\"/User-Permits\"},\"data\":{\"edges\":[{\"from\":\"__START__\",\"to\":\"300s间隔定时器\"},{\"from\":\"300s间隔定时器\",\"to\":\"执行LDAP用户同步\"}],\"icon\":\"\",\"nodes\":[{\"auto_run\":true,\"component\":\"cmdb_component-vars\",\"config\":{},\"descr\":\"自定义表单\",\"name\":\"__START__\",\"settings\":{}},{\"auto_run\":true,\"component\":\"cmdb_component-vars\",\"config\":{},\"descr\":\"自定义表单\",\"name\":\"__END__\",\"settings\":{}},{\"settings\":{},\"auto_run\":true,\"component\":\"cmdb_component-ticker\",\"config\":{},\"descr\":\"固定时间间隔执行\",\"inputs\":{\"*\":{\"immediately\":true,\"interval_s\":300,\"times\":-1},\"__START__\":{\"times\":-1,\"immediately\":true,\"interval_s\":300}},\"name\":\"300s间隔定时器\"},{\"config\":{\"id\":\"cmdb_workflow-1uaacrzb09iu0\"},\"descr\":\"派生 Workflow\",\"inputs\":{\"*\":{},\"300s间隔定时器\":{\"ldap_auth_id\":\"cmdb_third_party_auth-ldap_default\",\"ldap_user_filter\":\"(objectClass=organizationalPerson)\",\"user_account_schema\":\"cmdb_schema_x-d97uo84ongx8\"}},\"merge\":{\"enable\":false},\"name\":\"执行LDAP用户同步\",\"settings\":{},\"auto_run\":true,\"component\":\"cmdb_component-workflow\"}]},\"indexes\":{}}",
          "{\"inode\":{\"id\":\"cmdb_workflow-2kyhx8i76g7ls\",\"schema_id\":\"cmdb_schema_workflow-0\",\"name\":\"[系统/定时] 执行用户与系统账户同步\",\"namespace\":\"/User-Permits\"},\"data\":{\"edges\":[{\"from\":\"__START__\",\"to\":\"300s定时器\"},{\"from\":\"300s定时器\",\"to\":\"指定用户账户同步\"}],\"icon\":\"\",\"nodes\":[{\"name\":\"__START__\",\"settings\":{},\"auto_run\":true,\"component\":\"cmdb_component-vars\",\"config\":{},\"descr\":\"自定义表单\"},{\"auto_run\":true,\"component\":\"cmdb_component-vars\",\"config\":{},\"descr\":\"自定义表单\",\"name\":\"__END__\",\"settings\":{}},{\"config\":{},\"descr\":\"固定时间间隔执行\",\"inputs\":{\"*\":{\"immediately\":true,\"interval_s\":300,\"times\":-1},\"__START__\":{\"times\":-1,\"immediately\":true,\"interval_s\":300}},\"name\":\"300s定时器\",\"settings\":{},\"auto_run\":true,\"component\":\"cmdb_component-ticker\"},{\"descr\":\"派生 Workflow\",\"inputs\":{\"*\":{\"action\":\"sync\"},\"300s定时器\":{\"action\":\"sync\",\"user_account_schema\":\"cmdb_schema_x-d97uo84ongx8\"}},\"name\":\"指定用户账户同步\",\"settings\":{},\"auto_run\":true,\"component\":\"cmdb_component-workflow\",\"config\":{\"id\":\"cmdb_workflow-2djklkypb5fzh\"}}]},\"indexes\":{}}",
          "{\"inode\":{\"id\":\"cmdb_workflow-2djklkypb5fzh\",\"schema_id\":\"cmdb_schema_workflow-0\",\"name\":\"[系统] 从用户账户同步到系统账户\",\"namespace\":\"/User-Permits\"},\"data\":{\"edges\":[{\"from\":\"__START__\",\"to\":\"同步系统账户\"},{\"from\":\"同步系统账户\",\"to\":\"__END__\"}],\"icon\":\"\",\"nodes\":[{\"inputs\":{\"*\":{\"action\":\"sync\",\"user_account_schema\":\"cmdb_schema_x-d97uo84ongx8\"}},\"name\":\"__START__\",\"settings\":{},\"auto_run\":true,\"component\":\"cmdb_component-vars\",\"config\":{\"schema\":\"{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"user_account_schema\\\":{\\\"type\\\":\\\"string\\\",\\\"title\\\":\\\"用户账户模型\\\"},\\\"action\\\":{\\\"type\\\":\\\"string\\\",\\\"title\\\":\\\"维护操作\\\",\\\"enum\\\":[\\\"remove\\\",\\\"sync\\\"],\\\"default\\\":\\\"sync\\\"},\\\"sync_accounts\\\":{\\\"type\\\":\\\"array\\\",\\\"items\\\":{\\\"type\\\":\\\"string\\\"},\\\"title\\\":\\\"同步目标账户\\\"}},\\\"required\\\":[\\\"action\\\",\\\"sync_accounts\\\",\\\"user_account_schema\\\"],\\\"title\\\":\\\"运行参数\\\"}\"},\"descr\":\"自定义表单\"},{\"inputs\":{\"同步系统账户\":{\"result\":\"{var:同步系统账户.output.result}\",\"message\":\"{var:同步系统账户.output.message}\"}},\"name\":\"__END__\",\"settings\":{},\"auto_run\":true,\"component\":\"cmdb_component-vars\",\"config\":{\"schema\":\"{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"result\\\":{\\\"type\\\":\\\"string\\\",\\\"title\\\":\\\"运行结果\\\"},\\\"message\\\":{\\\"type\\\":\\\"string\\\",\\\"title\\\":\\\"返回信息\\\"}},\\\"title\\\":\\\"返回数据\\\",\\\"required\\\":[\\\"result\\\",\\\"message\\\"]}\"},\"descr\":\"自定义表单\"},{\"inputs\":{\"__START__\":{\"action\":\"{var:__START__.output.action}\",\"sync_accounts\":\"{var:__START__.output.sync_accounts}\",\"user_account_schema\":\"{var:__START__.output.user_account_schema}\"}},\"name\":\"同步系统账户\",\"settings\":{},\"auto_run\":true,\"component\":\"cmdb_component-interpreter_ecmascript\",\"config\":{\"input_schema\":\"{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"action\\\":{\\\"type\\\":\\\"string\\\",\\\"title\\\":\\\"操作\\\",\\\"enum\\\":[\\\"sync\\\",\\\"remove\\\"],\\\"default\\\":\\\"sync\\\"},\\\"user_account_schema\\\":{\\\"type\\\":\\\"string\\\",\\\"title\\\":\\\"自定义用户模型\\\"},\\\"sync_accounts\\\":{\\\"type\\\":\\\"array\\\",\\\"items\\\":{\\\"type\\\":\\\"string\\\"},\\\"title\\\":\\\"操作用户\\\"}},\\\"title\\\":\\\"输入参数\\\",\\\"required\\\":[\\\"action\\\"]}\",\"output_schema\":\"{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"result\\\":{\\\"type\\\":\\\"string\\\",\\\"title\\\":\\\"运行结果\\\"},\\\"message\\\":{\\\"type\\\":\\\"string\\\",\\\"title\\\":\\\"返回信息\\\"}},\\\"title\\\":\\\"返回数据\\\",\\\"required\\\":[\\\"result\\\",\\\"message\\\"]}\",\"script\":\"/*\\n此代码片段用于将用户自定义的 \\\"用户\\\" 同步到 \\\"系统用户\\\"，并根据 \\\"用户\\\" 设置 \\\"系统用户\\\" 相关的权限字段。\\n\\n要求：\\n1. \\\"用户\\\" 对象模型中必须包含以下索引字段：\\n    1.1 cmdb_index-third_party_auth\\n    1.2 cmdb_index-forbidden\\n    1.3 cmdb_index-account_username\\n    1.4 cmdb_index-sys_account\\n    1.5 cmdb_index-organizations\\n\\n输入参数：\\n{\\n    \\\"action\\\": \\\"remove/sync\\\",\\n    \\\"user_account_schema\\\": \\\"\\\",\\n    \\\"sync_accounts\\\": [\\\"\\\"]\\n}\\n*/\\n\\nvar ctx = new WorkflowRuntimeContext();\\nvar input = ctx.input();\\nvar ecu = ctx.getECU();\\n\\nfunction arraysEqual(a, b) {\\n    if (a === b) return true;\\n    if (a == null || b == null) return false;\\n    if (a.length != b.length) return false;\\n\\n    for (var i = 0; i \u003c a.length; ++i) {\\n      if (a[i] !== b[i]) return false;\\n    }\\n    return true;\\n}\\n\\n// 从 userAccount 中提取字段创建 sysAccount，并关联到 userAccount\\nfunction createSysAccount(userAccount) {\\n    username = userAccount.indexes[\\\"cmdb_index-account_username\\\"]\\n    if (!username) {\\n        return\\n    }\\n    nickname = userAccount.inode.name\\n    thirdPartyAuth = userAccount.indexes[\\\"cmdb_index-third_party_auth\\\"]\\n    isForbidden = userAccount.indexes[\\\"cmdb_index-forbidden\\\"]\\n    organizations = userAccount.indexes[\\\"cmdb_index-organizations\\\"]\\n\\n    thirdPartyAuthId = null\\n    if (thirdPartyAuth) {\\n        thirdPartyAuthId = thirdPartyAuth.inode.id\\n    }\\n    organizationIds = []\\n    if (organizations) {\\n        organizations.forEach(function(org){\\n            organizationIds.push(org.inode.id)\\n        })\\n    }\\n    if (nickname == \\\"\\\") {\\n        nickname = username\\n    }\\n    syncMarker = new Date().getTime()\\n    sysAccount = {\\n        inode: {\\n            id: \\\"cmdb_account-v1:\\\"+username,\\n            name: nickname,\\n            schema_id: \\\"cmdb_schema_account-0\\\",\\n        },\\n        indexes: {\\n            \\\"cmdb_index-forbidden\\\": isForbidden,\\n            \\\"cmdb_index-organizations\\\": organizationIds,\\n            \\\"cmdb_index-third_party_auth\\\": thirdPartyAuthId,\\n            \\\"cmdb_index-account_username\\\": username,\\n            \\\"cmdb_index-sync_marker\\\": syncMarker.toString(),\\n        },\\n    }\\n    createResult = ecu.createObjects([sysAccount])\\n    sysAccountId = createResult.objects[0]\\n\\n    // 更新 userAccount 关联到 sysAccount 的索引\\n    userAccountUpdate = {\\n        object: {\\n            indexes: {\\n                \\\"cmdb_index-sys_account\\\": sysAccountId,\\n            },\\n        },\\n        updates: [\\\".indexes.cmdb_index-sys_account\\\"],\\n    }\\n    ecu.updateObjects({objects: [userAccount.inode.id]}, userAccountUpdate)\\n}\\n\\nfunction compareAndUpdateSysAccount(userAccount, sysAccount) {\\n    sysAccountUpdate = {\\n        object: {inode:{},indexes:{}}, updates: [],\\n    }\\n    username = userAccount.indexes[\\\"cmdb_index-account_username\\\"]\\n    if (sysAccount.indexes[\\\"cmdb_index-account_username\\\"] != username) {\\n        sysAccountUpdate.object.indexes[\\\"cmdb_index-account_username\\\"] = username\\n        sysAccountUpdate.updates.push(\\\".indexes.cmdb_index-account_username\\\")\\n    }\\n    nickname = userAccount.inode.name\\n    if (sysAccount.inode.name != nickname) {\\n        sysAccountUpdate.object.inode[\\\"name\\\"] = nickname\\n        sysAccountUpdate.updates.push(\\\".inode.name\\\")\\n    }\\n\\n    userThirdPartyAuthId = \\\"\\\"\\n    userThirdPartyAuth = userAccount.indexes[\\\"cmdb_index-third_party_auth\\\"]\\n    if (userThirdPartyAuth) {\\n        userThirdPartyAuthId = userThirdPartyAuth.inode.id\\n    }\\n    sysThirdPartyAuthId = \\\"\\\"\\n    sysThirdPartyAuth = sysAccount.indexes[\\\"cmdb_index-third_party_auth\\\"]\\n    if (sysThirdPartyAuth) {\\n        sysThirdPartyAuthId = sysThirdPartyAuth.inode.id\\n    }\\n    if (userThirdPartyAuthId != sysThirdPartyAuthId) {\\n        sysAccountUpdate.object.indexes[\\\"cmdb_index-third_party_auth\\\"] = userThirdPartyAuthId\\n        sysAccountUpdate.updates.push(\\\".indexes.cmdb_index-third_party_auth\\\")\\n    }\\n\\n    isForbidden = userAccount.indexes[\\\"cmdb_index-forbidden\\\"]\\n    if (sysAccount.indexes[\\\"cmdb_index-forbidden\\\"] != isForbidden) {\\n        sysAccountUpdate.object.indexes[\\\"cmdb_index-forbidden\\\"] = isForbidden\\n        sysAccountUpdate.updates.push(\\\".indexes.cmdb_index-forbidden\\\")\\n    }\\n\\n    userOrganizations = userAccount.indexes[\\\"cmdb_index-organizations\\\"]\\n    userOrganizationIds = []\\n    if (userOrganizations) {\\n        userOrganizations.forEach(function(org){\\n            userOrganizationIds.push(org.inode.id)\\n        })\\n    }\\n    sysOrganizations = sysAccount.indexes[\\\"cmdb_index-organizations\\\"]\\n    sysOrganizationIds = []\\n    if (sysOrganizations) {\\n        sysOrganizations.forEach(function(org){\\n            sysOrganizationIds.push(org.inode.id)\\n        })\\n    }\\n    if (!arraysEqual(userOrganizations, sysOrganizationIds)) {\\n        sysAccountUpdate.object.indexes[\\\"cmdb_index-organizations\\\"] = userOrganizationIds\\n        sysAccountUpdate.updates.push(\\\".indexes.cmdb_index-organizations\\\") \\n    }\\n    if (sysAccountUpdate.updates.length == 0) {\\n        return\\n    }\\n    ecu.updateObjects({objects: [sysAccount.inode.id]}, sysAccountUpdate)\\n}\\n\\nfunction removeSysAccounts(sysAccountIds) {\\n    if (sysAccountIds.length == 0) {\\n        return\\n    }\\n    sysAccountUpdate = {\\n        object: {inode:{archived: true}}, updates: [\\\".inode.archived\\\"],\\n    }\\n    ecu.updateObjects(\\n        {\\n            conditions: [\\n                {field: \\\"inode.schema_id\\\", op:\\\"=\\\", value: \\\"cmdb_schema_account-0\\\"},\\n            ],\\n            objects: sysAccountIds,\\n        },\\n        sysAccountUpdate)\\n}\\n\\nfunction removeUserAccounts(userAccountIds) {\\n    userAccountUpdate = {\\n        object: {inode:{archived: true}}, updates: [\\\".inode.archived\\\"],\\n    }\\n    ecu.updateObjects(\\n        {\\n            conditions: [\\n                {field: \\\"inode.schema_id\\\", op:\\\"=\\\", value: user_account_schema},\\n            ],\\n            objects: userAccountIds,\\n        },\\n        userAccountUpdate)\\n}\\n\\n// 全量同步所有用户\\nfunction syncFullUserAccounts() {\\n    // 查询所有 UserAccount\\n    userAccountQuery = {\\n        conditions: [\\n            {field: \\\"inode.schema_id\\\", op:\\\"=\\\", value: user_account_schema},\\n        ],\\n        selects: [\\n            // 这里挨个字段 select 出来，用来确保指定的用户模型中确实存在这些索引字段，不然此查询会报错\\n            \\\".inode.name\\\", \\\".indexes.cmdb_index-third_party_auth\\\", \\n            \\\".indexes.cmdb_index-forbidden\\\", \\\".indexes.cmdb_index-sys_account\\\",\\n            \\\".indexes.cmdb_index-organizations\\\", \\\".indexes.cmdb_index-account_username\\\",\\n        ],\\n        objects: [\\\"$conditions\\\"],\\n    }\\n    // 查询所有 SysAccount\\n    sysAccountQuery = {\\n        conditions: [\\n            {field: \\\"inode.schema_id\\\", op:\\\"=\\\", value: \\\"cmdb_schema_account-0\\\"},\\n            {field: \\\"indexes.cmdb_index-sync_marker\\\", op:\\\"=~\\\", value: \\\".*\\\"}, // 只列出经由同步产生的系统用户\\n        ],\\n        selects: [\\\".\\\"],\\n        objects: [\\\"$conditions\\\"],\\n    }\\n    userAccountResult = ecu.queryObjects(userAccountQuery)\\n    sysAccountResult = ecu.queryObjects(sysAccountQuery)\\n\\n    compareAndSyncAccounts(userAccountResult.objects, sysAccountResult.objects)\\n}\\n\\n// 同步参数中指定的用户列表\\nfunction syncSpecifiedUserAccounts() {\\n    // 查询指定的 UserAccount\\n    userAccountQuery = {\\n        conditions: [\\n            {field: \\\"inode.schema_id\\\", op:\\\"=\\\", value: user_account_schema},\\n        ],\\n        selects: [\\n            \\\".inode.name\\\", \\\".indexes.cmdb_index-third_party_auth\\\", \\n            \\\".indexes.cmdb_index-forbidden\\\", \\\".indexes.cmdb_index-sys_account\\\",\\n            \\\".indexes.cmdb_index-organizations\\\", \\\".indexes.cmdb_index-account_username\\\",\\n        ],\\n        objects: sync_accounts,\\n    }\\n    userAccountResult = ecu.queryObjects(userAccountQuery)\\n    userAccounts = userAccountResult.objects?userAccountResult.objects:[]\\n\\n    sysAccountIds = []\\n    userAccountResult.objects.forEach(function (userAccount){\\n        sysAccount = userAccount.indexes[\\\"cmdb_index-sys_account\\\"]\\n        if (sysAccount) {\\n            sysAccountIds.push(sysAccount.inode.id)\\n        }\\n    })\\n    // 查询指定 UserAccount 当前关联的 SysAccount\\n    sysAccountQuery = {\\n        objects: sysAccountIds,\\n        conditions: [\\n            {field: \\\"inode.schema_id\\\", op:\\\"=\\\", value: \\\"cmdb_schema_account-0\\\"},\\n        ],\\n        selects: [\\\".\\\"],\\n    }\\n    sysAccountResult = ecu.queryObjects(sysAccountQuery)\\n    sysAccounts = sysAccountResult.objects?sysAccountResult.objects:[]\\n\\n    compareAndSyncAccounts(userAccounts, sysAccounts)\\n}\\n\\n// 同步 userAccounts 和 sysAccounts，多删少建，不同则更新\\nfunction compareAndSyncAccounts(userAccounts, sysAccounts) {\\n    sysAccountDict = {}\\n    sysAccounts.forEach(function (sysAccount){\\n        sysAccountDict[sysAccount.inode.id] = sysAccount\\n    })\\n\\n    userAccountDict = {} // username -\u003e userAccount\\n    userAccounts.forEach(function (userAccount){\\n        username = userAccount.indexes[\\\"cmdb_index-account_username\\\"]\\n        if (!username) {\\n            return\\n        }\\n        sysAccount = userAccount.indexes[\\\"cmdb_index-sys_account\\\"]\\n        if (!sysAccount) {\\n            // 创建 UserAccount 对应的 SysAccount\\n            createSysAccount(userAccount)\\n            return\\n        }\\n        sysAccountId = sysAccount.inode.id\\n        sysAccount = sysAccountDict[sysAccountId]\\n        if (!sysAccount) {\\n            // 创建 UserAccount 对应的 SysAccount\\n            createSysAccount(userAccount)\\n            return\\n        }\\n        compareAndUpdateSysAccount(userAccount, sysAccount)\\n        delete sysAccountDict[sysAccountId]\\n    })\\n\\n    sysAccountIdsForRemove = []\\n    for (sysAccountId in sysAccountDict) {\\n        sysAccountIdsForRemove.push(sysAccountId)\\n    }\\n    removeSysAccounts(sysAccountIdsForRemove)\\n}\\n\\n// 删除参数中指定的用户列表，同步删除关联的 sysAccounts\\nfunction removeSpecifiedUserAccounts() {\\n    if (sync_accounts.length==0) {\\n        return\\n    }\\n    // 查询指定的 UserAccount\\n    userAccountQuery = {\\n        conditions: [\\n            {field: \\\"inode.schema_id\\\", op:\\\"=\\\", value: user_account_schema},\\n        ],\\n        selects: [\\\".indexes.cmdb_index-sys_account\\\"],\\n        objects: sync_accounts,\\n    }\\n    userAccountResult = ecu.queryObjects(userAccountQuery)\\n\\n    sysAccountIds = []\\n    userAccountResult.objects.forEach(function (userAccount){\\n        sysAccount = userAccount.indexes[\\\"cmdb_index-sys_account\\\"]\\n        if (sysAccount) {\\n            sysAccountIds.push(sysAccount.inode.id)\\n        }\\n    })\\n    removeSysAccounts(sysAccountIds)\\n    removeUserAccounts(sync_accounts)\\n}\\n\\nfunction mainSyncProcess() {\\n    action = input.action\\n    if (!action || (action != \\\"remove\\\" \u0026\u0026 action != \\\"sync\\\")) {\\n        ctx.output({\\\"result\\\":\\\"failed\\\",\\\"message\\\": \\\"请指定参数 action：remove/sync\\\"})\\n        return\\n    }\\n    user_account_schema = input.user_account_schema\\n    if (!user_account_schema) {\\n        user_account_schema = \\\"cmdb_schema_user_account-0\\\"\\n    }\\n    sync_accounts = input.sync_accounts\\n    if (!sync_accounts) {\\n        sync_accounts = []\\n    }\\n    if (action == \\\"sync\\\" \u0026\u0026 sync_accounts.length \u003e 0 ) {\\n        syncSpecifiedUserAccounts()\\n    }\\n    if (action == \\\"sync\\\" \u0026\u0026 sync_accounts.length == 0 ) {\\n        syncFullUserAccounts()\\n    }\\n    if (action == \\\"remove\\\" \u0026\u0026 sync_accounts.length \u003e 0 ) {\\n        removeUserAccounts()\\n    }\\n    ctx.output({\\\"result\\\":\\\"success\\\",\\\"message\\\":\\\"执行成功\\\"})\\n}\\n\\nmainSyncProcess()\\n\",\"timeout_s\":30},\"descr\":\"ES2015 解析组件\"}]},\"indexes\":{}}",
          "{\"inode\":{\"id\":\"cmdb_workflow-fustt7gexgh1\",\"schema_id\":\"cmdb_schema_workflow-0\",\"name\":\"[定制] 新增、更新单个用户账户\",\"namespace\":\"/User-Permits\"},\"data\":{\"edges\":[{\"from\":\"__START__\",\"to\":\"创建或更新用户信息\"},{\"from\":\"创建或更新用户信息\",\"to\":\"用户更新成功\"},{\"from\":\"创建或更新用户信息\",\"to\":\"用户更新失败\"},{\"to\":\"__END__\",\"from\":\"用户更新失败\"},{\"from\":\"用户更新成功\",\"to\":\"同步系统账户\"},{\"from\":\"同步系统账户\",\"to\":\"__END__\"}],\"icon\":\"\",\"nodes\":[{\"name\":\"__START__\",\"settings\":{},\"auto_run\":true,\"component\":\"cmdb_component-vars\",\"config\":{\"schema\":\"{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"user_account_id\\\":{\\\"type\\\":\\\"string\\\",\\\"title\\\":\\\"用户账户 ID（可选）\\\"},\\\"departments\\\":{\\\"type\\\":\\\"array\\\",\\\"items\\\":{\\\"type\\\":\\\"string\\\"},\\\"title\\\":\\\"所属部门\\\"},\\\"is_forbidden\\\":{\\\"type\\\":\\\"boolean\\\",\\\"title\\\":\\\"是否被禁用\\\"},\\\"permit_roles\\\":{\\\"type\\\":\\\"array\\\",\\\"items\\\":{\\\"type\\\":\\\"string\\\"},\\\"title\\\":\\\"拥有角色列表\\\"},\\\"nickname\\\":{\\\"type\\\":\\\"string\\\",\\\"title\\\":\\\"用户姓名\\\"},\\\"username\\\":{\\\"type\\\":\\\"string\\\",\\\"title\\\":\\\"用户 ID\\\"}},\\\"title\\\":\\\"运行参数\\\",\\\"required\\\":[]}\"},\"descr\":\"自定义表单\",\"inputs\":{\"*\":{}}},{\"settings\":{},\"auto_run\":true,\"component\":\"cmdb_component-vars\",\"config\":{\"schema\":\"{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"result\\\":{\\\"type\\\":\\\"string\\\",\\\"title\\\":\\\"运行结果\\\"},\\\"message\\\":{\\\"type\\\":\\\"string\\\",\\\"title\\\":\\\"返回信息\\\"}},\\\"required\\\":[\\\"result\\\",\\\"message\\\"],\\\"title\\\":\\\"结果数据\\\"}\"},\"descr\":\"自定义表单\",\"inputs\":{\"同步系统账户\":{\"result\":\"{var:同步系统账户.output.result}\",\"message\":\"{var:同步系统账户.output.message}\"},\"用户更新失败\":{\"message\":\"{var:创建或更新用户信息.output.message}\",\"result\":\"{var:创建或更新用户信息.output.result}\"}},\"name\":\"__END__\"},{\"auto_run\":true,\"component\":\"cmdb_component-interpreter_ecmascript\",\"config\":{\"script\":\"/*\\n此代码片段用于创建或更新一个用户账户。\\n\\n输入参数：\\n{\\n    \\\"user_account_id\\\": \\\"\\\", // 若为空，则代表创建新用户，否则为更新\\n    \\\"departments\\\": [],\\n    \\\"departments_index\\\": \\\"\\\", // 用户关联到行政部门的索引\\n    \\\"nickname\\\": \\\"\\\",\\n    \\\"username\\\": \\\"\\\",\\n    \\\"permit_roles\\\": [],\\n    \\\"is_forbidden\\\": false\\n}\\n*/\\n\\nvar ctx = new WorkflowRuntimeContext();\\nvar input = ctx.input();\\nvar ecu = ctx.getECU();\\n\\nusername = input.username\\nnickname = input.nickname\\npermit_roles = input.permit_roles\\ndepartments = input.departments\\nuser_account_schema = input.user_account_schema?input.user_account_schema:\\\"cmdb_schema_user_account-0\\\"\\ndepartments_index = input.departments_index?input.departments_index:\\\"cmdb_index-departments\\\"\\nis_forbidden = input.is_forbidden\\n\\nreturnInfo = {\\\"result\\\": \\\"success\\\", \\\"message\\\": \\\"执行成功\\\"}\\n\\nuser_account_id = input.user_account_id\\nif (!user_account_id) {\\n    createUserAccount()\\n} else {\\n    updateUserAccount()\\n}\\n\\n// 检查给定的 username 是否已存在\\nfunction queryUsernameBelongsTo() {\\n    userAccountQuery = {\\n        conditions: [\\n            {field: \\\"inode.schema_id\\\", op:\\\"=\\\", value:user_account_schema},\\n            {field: \\\"indexes.cmdb_index-account_username\\\", op:\\\"=\\\", value:username},\\n        ],objects:[\\\"$conditions\\\"],selects:[\\\".inode.id\\\"],\\n    }\\n    result = ecu.queryObjects(userAccountQuery)\\n    accountIds = []\\n    result.objects.forEach(function(object){\\n        accountIds.push(object.inode.id)\\n    })\\n    return accountIds\\n}\\n\\nfunction createUserAccount() {\\n    if (queryUsernameBelongsTo().length!=0) {\\n        returnInfo = {\\\"result\\\": \\\"failed\\\", \\\"message\\\": \\\"此用户名已存在\\\"}\\n        return\\n    }\\n    userAccountObject = {\\n        inode: {\\n            name: nickname,\\n            schema_id: user_account_schema,\\n        },\\n        indexes: {\\n            \\\"cmdb_index-organizations\\\": permit_roles,\\n            \\\"cmdb_index-account_username\\\": username,\\n            \\\"cmdb_index-forbidden\\\": is_forbidden,\\n        },\\n    }\\n    userAccountObject.indexes[departments_index] = departments\\n    result = ecu.createObjects([userAccountObject])\\n    user_account_id = result.objects[0]\\n    returnInfo[\\\"user_account_id\\\"] = user_account_id\\n}\\n\\nfunction updateUserAccount() {\\n    usernameOwner = queryUsernameBelongsTo()\\n    usernameValid = true\\n    usernameOwner.forEach(function(owner){\\n        if (owner!=user_account_id) {\\n            usernameValid = false\\n        }\\n    })\\n    if (!usernameValid) {\\n        returnInfo = {\\\"result\\\": \\\"failed\\\", \\\"message\\\": \\\"此用户名已存在\\\"}\\n        return\\n    }\\n    userAccountQuery = {\\n        conditions: [\\n            {field: \\\"inode.schema_id\\\", op:\\\"=\\\", value:user_account_schema},\\n        ],\\n        objects: [user_account_id],\\n    }\\n    userAccountUpdate = {\\n        object: {\\n            inode: {\\n                name: nickname,\\n            },\\n            indexes: {\\n                \\\"cmdb_index-organizations\\\": permit_roles,\\n                \\\"cmdb_index-account_username\\\": username,\\n                \\\"cmdb_index-forbidden\\\": is_forbidden,\\n            },\\n        },\\n        updates: [\\n            \\\".inode.name\\\",\\n            \\\".indexes.cmdb_index-organizations\\\",\\n            \\\".indexes.cmdb_index-account_username\\\",\\n            \\\".indexes.cmdb_index-forbidden\\\",\\n            \\\".indexes.\\\"+departments_index,\\n        ],\\n    }\\n    userAccountUpdate.object.indexes[departments_index] = departments\\n\\n    xxx = ecu.updateObjects(userAccountQuery, userAccountUpdate)\\n    returnInfo[\\\"xxxx\\\"] = {\\\"q\\\": userAccountQuery, \\\"u\\\": userAccountUpdate, \\\"r\\\": xxx}\\n    returnInfo[\\\"user_account_id\\\"] = user_account_id\\n}\\nctx.output(returnInfo)\",\"timeout_s\":30,\"input_schema\":\"{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"user_account_id\\\":{\\\"type\\\":\\\"string\\\",\\\"title\\\":\\\"用户账户 ID（可选）\\\"},\\\"is_forbidden\\\":{\\\"type\\\":\\\"boolean\\\",\\\"title\\\":\\\"是否被禁用\\\"},\\\"permit_roles\\\":{\\\"type\\\":\\\"array\\\",\\\"items\\\":{\\\"type\\\":\\\"string\\\"},\\\"title\\\":\\\"拥有角色列表\\\"},\\\"nickname\\\":{\\\"type\\\":\\\"string\\\",\\\"title\\\":\\\"用户姓名\\\"},\\\"username\\\":{\\\"type\\\":\\\"string\\\",\\\"title\\\":\\\"用户 ID\\\"},\\\"user_account_schema\\\":{\\\"type\\\":\\\"string\\\",\\\"title\\\":\\\"用户账户模型\\\"},\\\"departments\\\":{\\\"type\\\":\\\"array\\\",\\\"items\\\":{\\\"type\\\":\\\"string\\\"},\\\"title\\\":\\\"所属部门\\\"},\\\"departments_index\\\":{\\\"type\\\":\\\"string\\\",\\\"title\\\":\\\"部门索引\\\"}},\\\"title\\\":\\\"运行参数\\\"}\",\"output_schema\":\"{\\\"type\\\":\\\"object\\\",\\\"title\\\":\\\"返回数据\\\",\\\"properties\\\":{\\\"user_account_id\\\":{\\\"type\\\":\\\"string\\\",\\\"title\\\":\\\"变更用户ID\\\"},\\\"result\\\":{\\\"type\\\":\\\"string\\\",\\\"title\\\":\\\"执行结果\\\"},\\\"message\\\":{\\\"type\\\":\\\"string\\\",\\\"title\\\":\\\"返回信息\\\"}},\\\"required\\\":[\\\"user_account_id\\\",\\\"result\\\",\\\"message\\\"]}\"},\"descr\":\"ES2015 解析组件\",\"inputs\":{\"__START__\":{\"user_account_schema\":\"cmdb_schema_x-d97uo84ongx8\",\"username\":\"{var:__START__.output.username}\",\"department\":\"\",\"departments\":\"{var:__START__.output.departments}\",\"departments_index\":\"cmdb_index-23prb3qw1k4ys\",\"district_department\":\"\",\"is_forbidden\":\"{var:__START__.output.is_forbidden}\",\"user_account_id\":\"{var:__START__.output.user_account_id}\",\"nickname\":\"{var:__START__.output.nickname}\",\"permit_roles\":\"{var:__START__.output.permit_roles}\"}},\"name\":\"创建或更新用户信息\",\"settings\":{}},{\"config\":{\"array\":false,\"op\":\"字符串-相等\"},\"descr\":\"条件判断\",\"inputs\":{\"*\":{},\"创建或更新用户信息\":{\"target\":\"success\",\"value\":\"{var:创建或更新用户信息.output.result}\"}},\"name\":\"用户更新成功\",\"settings\":{},\"auto_run\":true,\"component\":\"cmdb_component-condition\"},{\"inputs\":{\"*\":{},\"创建或更新用户信息\":{\"target\":\"success\",\"value\":\"{var:创建或更新用户信息.output.result}\"}},\"name\":\"用户更新失败\",\"settings\":{},\"auto_run\":true,\"component\":\"cmdb_component-condition\",\"config\":{\"array\":false,\"op\":\"字符串-不相等\"},\"descr\":\"条件判断\"},{\"name\":\"同步系统账户\",\"settings\":{},\"auto_run\":true,\"component\":\"cmdb_component-interpreter_ecmascript\",\"config\":{\"input_schema\":\"{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"action\\\":{\\\"type\\\":\\\"string\\\",\\\"title\\\":\\\"操作\\\",\\\"enum\\\":[\\\"sync\\\",\\\"remove\\\"],\\\"default\\\":\\\"sync\\\"},\\\"user_account_schema\\\":{\\\"type\\\":\\\"string\\\",\\\"title\\\":\\\"自定义用户模型\\\"},\\\"sync_accounts\\\":{\\\"type\\\":\\\"array\\\",\\\"items\\\":{\\\"type\\\":\\\"string\\\"},\\\"title\\\":\\\"操作用户\\\"}},\\\"title\\\":\\\"输入参数\\\",\\\"required\\\":[\\\"action\\\"]}\",\"output_schema\":\"{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"result\\\":{\\\"type\\\":\\\"string\\\",\\\"title\\\":\\\"运行结果\\\"},\\\"message\\\":{\\\"type\\\":\\\"string\\\",\\\"title\\\":\\\"返回信息\\\"}},\\\"title\\\":\\\"返回数据\\\",\\\"required\\\":[\\\"result\\\",\\\"message\\\"]}\",\"script\":\"/*\\n此代码片段用于将用户自定义的 \\\"用户\\\" 同步到 \\\"系统用户\\\"，并根据 \\\"用户\\\" 设置 \\\"系统用户\\\" 相关的权限字段。\\n\\n要求：\\n1. \\\"用户\\\" 对象模型中必须包含以下索引字段：\\n    1.1 cmdb_index-third_party_auth\\n    1.2 cmdb_index-forbidden\\n    1.3 cmdb_index-account_username\\n    1.4 cmdb_index-sys_account\\n    1.5 cmdb_index-organizations\\n\\n输入参数：\\n{\\n    \\\"action\\\": \\\"remove/sync\\\",\\n    \\\"user_account_schema\\\": \\\"\\\",\\n    \\\"sync_accounts\\\": [\\\"\\\"]\\n}\\n*/\\n\\nvar ctx = new WorkflowRuntimeContext();\\nvar input = ctx.input();\\nvar ecu = ctx.getECU();\\n\\nfunction arraysEqual(a, b) {\\n    if (a === b) return true;\\n    if (a == null || b == null) return false;\\n    if (a.length != b.length) return false;\\n\\n    for (var i = 0; i \u003c a.length; ++i) {\\n      if (a[i] !== b[i]) return false;\\n    }\\n    return true;\\n}\\n\\n// 从 userAccount 中提取字段创建 sysAccount，并关联到 userAccount\\nfunction createSysAccount(userAccount) {\\n    username = userAccount.indexes[\\\"cmdb_index-account_username\\\"]\\n    if (!username) {\\n        return\\n    }\\n    nickname = userAccount.inode.name\\n    thirdPartyAuth = userAccount.indexes[\\\"cmdb_index-third_party_auth\\\"]\\n    isForbidden = userAccount.indexes[\\\"cmdb_index-forbidden\\\"]\\n    organizations = userAccount.indexes[\\\"cmdb_index-organizations\\\"]\\n\\n    thirdPartyAuthId = null\\n    if (thirdPartyAuth) {\\n        thirdPartyAuthId = thirdPartyAuth.inode.id\\n    }\\n    organizationIds = []\\n    if (organizations) {\\n        organizations.forEach(function(org){\\n            organizationIds.push(org.inode.id)\\n        })\\n    }\\n    if (nickname == \\\"\\\") {\\n        nickname = username\\n    }\\n    syncMarker = new Date().getTime()\\n    sysAccount = {\\n        inode: {\\n            id: \\\"cmdb_account-v1:\\\"+username,\\n            name: nickname,\\n            schema_id: \\\"cmdb_schema_account-0\\\",\\n        },\\n        indexes: {\\n            \\\"cmdb_index-forbidden\\\": isForbidden,\\n            \\\"cmdb_index-organizations\\\": organizationIds,\\n            \\\"cmdb_index-third_party_auth\\\": thirdPartyAuthId,\\n            \\\"cmdb_index-account_username\\\": username,\\n            \\\"cmdb_index-sync_marker\\\": syncMarker.toString(),\\n        },\\n    }\\n    createResult = ecu.createObjects([sysAccount])\\n    sysAccountId = createResult.objects[0]\\n\\n    // 更新 userAccount 关联到 sysAccount 的索引\\n    userAccountUpdate = {\\n        object: {\\n            indexes: {\\n                \\\"cmdb_index-sys_account\\\": sysAccountId,\\n            },\\n        },\\n        updates: [\\\".indexes.cmdb_index-sys_account\\\"],\\n    }\\n    ecu.updateObjects({objects: [userAccount.inode.id]}, userAccountUpdate)\\n}\\n\\nfunction compareAndUpdateSysAccount(userAccount, sysAccount) {\\n    sysAccountUpdate = {\\n        object: {inode:{},indexes:{}}, updates: [],\\n    }\\n    username = userAccount.indexes[\\\"cmdb_index-account_username\\\"]\\n    if (sysAccount.indexes[\\\"cmdb_index-account_username\\\"] != username) {\\n        sysAccountUpdate.object.indexes[\\\"cmdb_index-account_username\\\"] = username\\n        sysAccountUpdate.updates.push(\\\".indexes.cmdb_index-account_username\\\")\\n    }\\n    nickname = userAccount.inode.name\\n    if (sysAccount.inode.name != nickname) {\\n        sysAccountUpdate.object.inode[\\\"name\\\"] = nickname\\n        sysAccountUpdate.updates.push(\\\".inode.name\\\")\\n    }\\n\\n    userThirdPartyAuthId = \\\"\\\"\\n    userThirdPartyAuth = userAccount.indexes[\\\"cmdb_index-third_party_auth\\\"]\\n    if (userThirdPartyAuth) {\\n        userThirdPartyAuthId = userThirdPartyAuth.inode.id\\n    }\\n    sysThirdPartyAuthId = \\\"\\\"\\n    sysThirdPartyAuth = sysAccount.indexes[\\\"cmdb_index-third_party_auth\\\"]\\n    if (sysThirdPartyAuth) {\\n        sysThirdPartyAuthId = sysThirdPartyAuth.inode.id\\n    }\\n    if (userThirdPartyAuthId != sysThirdPartyAuthId) {\\n        sysAccountUpdate.object.indexes[\\\"cmdb_index-third_party_auth\\\"] = userThirdPartyAuthId\\n        sysAccountUpdate.updates.push(\\\".indexes.cmdb_index-third_party_auth\\\")\\n    }\\n\\n    isForbidden = userAccount.indexes[\\\"cmdb_index-forbidden\\\"]\\n    if (sysAccount.indexes[\\\"cmdb_index-forbidden\\\"] != isForbidden) {\\n        sysAccountUpdate.object.indexes[\\\"cmdb_index-forbidden\\\"] = isForbidden\\n        sysAccountUpdate.updates.push(\\\".indexes.cmdb_index-forbidden\\\")\\n    }\\n\\n    userOrganizations = userAccount.indexes[\\\"cmdb_index-organizations\\\"]\\n    userOrganizationIds = []\\n    if (userOrganizations) {\\n        userOrganizations.forEach(function(org){\\n            userOrganizationIds.push(org.inode.id)\\n        })\\n    }\\n    sysOrganizations = sysAccount.indexes[\\\"cmdb_index-organizations\\\"]\\n    sysOrganizationIds = []\\n    if (sysOrganizations) {\\n        sysOrganizations.forEach(function(org){\\n            sysOrganizationIds.push(org.inode.id)\\n        })\\n    }\\n    if (!arraysEqual(userOrganizations, sysOrganizationIds)) {\\n        sysAccountUpdate.object.indexes[\\\"cmdb_index-organizations\\\"] = userOrganizationIds\\n        sysAccountUpdate.updates.push(\\\".indexes.cmdb_index-organizations\\\") \\n    }\\n    if (sysAccountUpdate.updates.length == 0) {\\n        return\\n    }\\n    ecu.updateObjects({objects: [sysAccount.inode.id]}, sysAccountUpdate)\\n}\\n\\nfunction removeSysAccounts(sysAccountIds) {\\n    if (sysAccountIds.length == 0) {\\n        return\\n    }\\n    sysAccountUpdate = {\\n        object: {inode:{archived: true}}, updates: [\\\".inode.archived\\\"],\\n    }\\n    ecu.updateObjects(\\n        {\\n            conditions: [\\n                {field: \\\"inode.schema_id\\\", op:\\\"=\\\", value: \\\"cmdb_schema_account-0\\\"},\\n            ],\\n            objects: sysAccountIds,\\n        },\\n        sysAccountUpdate)\\n}\\n\\nfunction removeUserAccounts(userAccountIds) {\\n    userAccountUpdate = {\\n        object: {inode:{archived: true}}, updates: [\\\".inode.archived\\\"],\\n    }\\n    ecu.updateObjects(\\n        {\\n            conditions: [\\n                {field: \\\"inode.schema_id\\\", op:\\\"=\\\", value: user_account_schema},\\n            ],\\n            objects: userAccountIds,\\n        },\\n        userAccountUpdate)\\n}\\n\\n// 全量同步所有用户\\nfunction syncFullUserAccounts() {\\n    // 查询所有 UserAccount\\n    userAccountQuery = {\\n        conditions: [\\n            {field: \\\"inode.schema_id\\\", op:\\\"=\\\", value: user_account_schema},\\n        ],\\n        selects: [\\n            // 这里挨个字段 select 出来，用来确保指定的用户模型中确实存在这些索引字段，不然此查询会报错\\n            \\\".inode.name\\\", \\\".indexes.cmdb_index-third_party_auth\\\", \\n            \\\".indexes.cmdb_index-forbidden\\\", \\\".indexes.cmdb_index-sys_account\\\",\\n            \\\".indexes.cmdb_index-organizations\\\", \\\".indexes.cmdb_index-account_username\\\",\\n        ],\\n        objects: [\\\"$conditions\\\"],\\n    }\\n    // 查询所有 SysAccount\\n    sysAccountQuery = {\\n        conditions: [\\n            {field: \\\"inode.schema_id\\\", op:\\\"=\\\", value: \\\"cmdb_schema_account-0\\\"},\\n            {field: \\\"indexes.cmdb_index-sync_marker\\\", op:\\\"=~\\\", value: \\\".*\\\"}, // 只列出经由同步产生的系统用户\\n        ],\\n        selects: [\\\".\\\"],\\n        objects: [\\\"$conditions\\\"],\\n    }\\n    userAccountResult = ecu.queryObjects(userAccountQuery)\\n    sysAccountResult = ecu.queryObjects(sysAccountQuery)\\n\\n    compareAndSyncAccounts(userAccountResult.objects, sysAccountResult.objects)\\n}\\n\\n// 同步参数中指定的用户列表\\nfunction syncSpecifiedUserAccounts() {\\n    // 查询指定的 UserAccount\\n    userAccountQuery = {\\n        conditions: [\\n            {field: \\\"inode.schema_id\\\", op:\\\"=\\\", value: user_account_schema},\\n        ],\\n        selects: [\\n            \\\".inode.name\\\", \\\".indexes.cmdb_index-third_party_auth\\\", \\n            \\\".indexes.cmdb_index-forbidden\\\", \\\".indexes.cmdb_index-sys_account\\\",\\n            \\\".indexes.cmdb_index-organizations\\\", \\\".indexes.cmdb_index-account_username\\\",\\n        ],\\n        objects: sync_accounts,\\n    }\\n    userAccountResult = ecu.queryObjects(userAccountQuery)\\n    userAccounts = userAccountResult.objects?userAccountResult.objects:[]\\n\\n    sysAccountIds = []\\n    userAccountResult.objects.forEach(function (userAccount){\\n        sysAccount = userAccount.indexes[\\\"cmdb_index-sys_account\\\"]\\n        if (sysAccount) {\\n            sysAccountIds.push(sysAccount.inode.id)\\n        }\\n    })\\n    // 查询指定 UserAccount 当前关联的 SysAccount\\n    sysAccountQuery = {\\n        objects: sysAccountIds,\\n        conditions: [\\n            {field: \\\"inode.schema_id\\\", op:\\\"=\\\", value: \\\"cmdb_schema_account-0\\\"},\\n        ],\\n        selects: [\\\".\\\"],\\n    }\\n    sysAccountResult = ecu.queryObjects(sysAccountQuery)\\n    sysAccounts = sysAccountResult.objects?sysAccountResult.objects:[]\\n\\n    compareAndSyncAccounts(userAccounts, sysAccounts)\\n}\\n\\n// 同步 userAccounts 和 sysAccounts，多删少建，不同则更新\\nfunction compareAndSyncAccounts(userAccounts, sysAccounts) {\\n    sysAccountDict = {}\\n    sysAccounts.forEach(function (sysAccount){\\n        sysAccountDict[sysAccount.inode.id] = sysAccount\\n    })\\n\\n    userAccountDict = {} // username -\u003e userAccount\\n    userAccounts.forEach(function (userAccount){\\n        username = userAccount.indexes[\\\"cmdb_index-account_username\\\"]\\n        if (!username) {\\n            return\\n        }\\n        sysAccount = userAccount.indexes[\\\"cmdb_index-sys_account\\\"]\\n        if (!sysAccount) {\\n            // 创建 UserAccount 对应的 SysAccount\\n            createSysAccount(userAccount)\\n            return\\n        }\\n        sysAccountId = sysAccount.inode.id\\n        sysAccount = sysAccountDict[sysAccountId]\\n        if (!sysAccount) {\\n            // 创建 UserAccount 对应的 SysAccount\\n            createSysAccount(userAccount)\\n            return\\n        }\\n        compareAndUpdateSysAccount(userAccount, sysAccount)\\n        delete sysAccountDict[sysAccountId]\\n    })\\n\\n    sysAccountIdsForRemove = []\\n    for (sysAccountId in sysAccountDict) {\\n        sysAccountIdsForRemove.push(sysAccountId)\\n    }\\n    removeSysAccounts(sysAccountIdsForRemove)\\n}\\n\\n// 删除参数中指定的用户列表，同步删除关联的 sysAccounts\\nfunction removeSpecifiedUserAccounts() {\\n    if (sync_accounts.length==0) {\\n        return\\n    }\\n    // 查询指定的 UserAccount\\n    userAccountQuery = {\\n        conditions: [\\n            {field: \\\"inode.schema_id\\\", op:\\\"=\\\", value: user_account_schema},\\n        ],\\n        selects: [\\\".indexes.cmdb_index-sys_account\\\"],\\n        objects: sync_accounts,\\n    }\\n    userAccountResult = ecu.queryObjects(userAccountQuery)\\n\\n    sysAccountIds = []\\n    userAccountResult.objects.forEach(function (userAccount){\\n        sysAccount = userAccount.indexes[\\\"cmdb_index-sys_account\\\"]\\n        if (sysAccount) {\\n            sysAccountIds.push(sysAccount.inode.id)\\n        }\\n    })\\n    removeSysAccounts(sysAccountIds)\\n    removeUserAccounts(sync_accounts)\\n}\\n\\nfunction mainSyncProcess() {\\n    action = input.action\\n    if (!action || (action != \\\"remove\\\" \u0026\u0026 action != \\\"sync\\\")) {\\n        ctx.output({\\\"result\\\":\\\"failed\\\",\\\"message\\\": \\\"请指定参数 action：remove/sync\\\"})\\n        return\\n    }\\n    user_account_schema = input.user_account_schema\\n    if (!user_account_schema) {\\n        user_account_schema = \\\"cmdb_schema_user_account-0\\\"\\n    }\\n    sync_accounts = input.sync_accounts\\n    if (!sync_accounts) {\\n        sync_accounts = []\\n    }\\n    if (action == \\\"sync\\\" \u0026\u0026 sync_accounts.length \u003e 0 ) {\\n        syncSpecifiedUserAccounts()\\n    }\\n    if (action == \\\"sync\\\" \u0026\u0026 sync_accounts.length == 0 ) {\\n        syncFullUserAccounts()\\n    }\\n    if (action == \\\"remove\\\" \u0026\u0026 sync_accounts.length \u003e 0 ) {\\n        removeUserAccounts()\\n    }\\n    ctx.output({\\\"result\\\":\\\"success\\\",\\\"message\\\":\\\"执行成功\\\"})\\n}\\n\\nmainSyncProcess()\\n\",\"timeout_s\":30},\"descr\":\"ES2015 解析组件\",\"inputs\":{\"*\":{\"action\":\"sync\"},\"用户更新成功\":{\"account_schema\":\"\",\"action\":\"sync\",\"sync_accounts\":[\"{var:创建或更新用户信息.output.user_account_id}\"],\"user_account_schema\":\"{var:创建或更新用户信息.input.user_account_schema}\"}}}]},\"indexes\":{}}",
          "{\"inode\":{\"id\":\"cmdb_workflow-3681pzmbl05c9\",\"schema_id\":\"cmdb_schema_workflow-0\",\"name\":\"[系统] 删除权限授权\",\"namespace\":\"/User-Permits\"},\"data\":{\"nodes\":[{\"config\":{\"schema\":\"{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"target_grant\\\":{\\\"type\\\":\\\"string\\\",\\\"title\\\":\\\"目标授权\\\"}},\\\"required\\\":[\\\"target_grant\\\"],\\\"title\\\":\\\"运行参数\\\"}\"},\"descr\":\"自定义表单\",\"inputs\":{\"*\":{}},\"name\":\"__START__\",\"settings\":{},\"auto_run\":true,\"component\":\"cmdb_component-vars\"},{\"auto_run\":true,\"component\":\"cmdb_component-vars\",\"config\":{\"schema\":\"{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"result\\\":{\\\"type\\\":\\\"string\\\",\\\"title\\\":\\\"运行结果\\\"},\\\"message\\\":{\\\"type\\\":\\\"string\\\",\\\"title\\\":\\\"返回信息\\\"}},\\\"title\\\":\\\"返回数据\\\",\\\"required\\\":[\\\"result\\\",\\\"message\\\"]}\"},\"descr\":\"自定义表单\",\"inputs\":{\"执行授权删除与维护动作\":{\"message\":\"{var:执行授权删除与维护动作.output.message}\",\"result\":\"{var:执行授权删除与维护动作.output.result}\"}},\"name\":\"__END__\",\"settings\":{}},{\"settings\":{},\"auto_run\":true,\"component\":\"cmdb_component-interpreter_ecmascript\",\"config\":{\"timeout_s\":30,\"input_schema\":\"{\\\"type\\\":\\\"object\\\",\\\"title\\\":\\\"输入参数\\\",\\\"properties\\\":{\\\"target_grant\\\":{\\\"type\\\":\\\"string\\\",\\\"title\\\":\\\"目标授权\\\"}},\\\"required\\\":[\\\"target_grant\\\"]}\",\"output_schema\":\"{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"result\\\":{\\\"type\\\":\\\"string\\\",\\\"title\\\":\\\"运行结果\\\"},\\\"message\\\":{\\\"type\\\":\\\"string\\\",\\\"title\\\":\\\"返回信息\\\"}},\\\"title\\\":\\\"返回数据\\\",\\\"required\\\":[\\\"result\\\",\\\"message\\\"]}\",\"script\":\"/*\\n此代码片段用于删除一个系统授权对象，并自动将其从被关联的组织中移除。\\n\\n输入参数：\\n{\\n    \\\"target_grant\\\": \\\"\\\"\\n}\\n*/\\n\\nvar ctx = new WorkflowRuntimeContext();\\nvar input = ctx.input();\\nvar ecu = ctx.getECU();\\n\\nfunction removeSysGrant() {\\n    target_grant = input.target_grant\\n    if (!target_grant) {\\n        ctx.output({\\\"result\\\":\\\"success\\\",\\\"message\\\":\\\"执行成功\\\"})\\n        return\\n    }\\n    // 将指定的授权对象归档\\n    grantQuery = {\\n        conditions: [\\n            {field: \\\".inode.schema_id\\\", op: \\\"=\\\", value: \\\"cmdb_schema_grant-0\\\"},\\n        ],\\n        objects: [target_grant], limit: 1,\\n    }\\n    grantUpdate = {\\n        object: {\\n            inode: {archived: true},\\n        },\\n        updates: [\\\".inode.archived\\\"],\\n    }\\n    result = ecu.updateObjects(grantQuery, grantUpdate)\\n    if (result.update_count == 0) {\\n        ctx.output({\\\"result\\\":\\\"success\\\",\\\"message\\\":\\\"执行成功\\\"})\\n        return\\n    }\\n    // 找到关联到此授权的组织，并从组织关联中移除\\n    organizationQuery = {\\n        conditions: [\\n            {field: \\\".inode.schema_id\\\", op: \\\"=\\\", value: \\\"cmdb_schema_organization-0\\\"},\\n            {field: \\\".indexes.cmdb_index-grants\\\", op: \\\"=\\\", value: target_grant},\\n        ],\\n        objects: [\\\"$conditions\\\"],\\n        selects: [\\n            \\\".inode.id\\\", \\\".indexes.cmdb_index-grants\\\"\\n        ],\\n    }\\n    result = ecu.queryObjects(organizationQuery)\\n    result.objects.forEach(function(org) {\\n        grantIds = []\\n        grants = org.indexes[\\\"cmdb_index-grants\\\"]\\n        grants.forEach(function(grant){\\n            if (grant.inode.id == target_grant) {\\n                return\\n            }\\n            grantIds.push(grant.inode.id)\\n        })\\n        orgQuery = {\\n            conditions: [\\n                {field: \\\".inode.schema_id\\\", op: \\\"=\\\", value: \\\"cmdb_schema_organization-0\\\"},\\n            ],\\n            objects: [org.inode.id], limit: 1,\\n        }\\n        orgUpdate = {\\n            object: {\\n                indexes: {\\n                    \\\"cmdb_index-grants\\\": grantIds,\\n                },\\n            },\\n            updates: [\\\".indexes.cmdb_index-grants\\\"],\\n        }\\n        ecu.updateObjects(orgQuery, orgUpdate)\\n    })\\n    ctx.output({\\\"result\\\":\\\"success\\\",\\\"message\\\":\\\"执行成功\\\"})\\n}\\n\\nremoveSysGrant()\"},\"descr\":\"ES2015 解析组件\",\"inputs\":{\"__START__\":{\"target_grant\":\"{var:__START__.output.target_grant}\"}},\"name\":\"执行授权删除与维护动作\"}],\"edges\":[{\"from\":\"__START__\",\"to\":\"执行授权删除与维护动作\"},{\"from\":\"执行授权删除与维护动作\",\"to\":\"__END__\"}],\"icon\":\"\"},\"indexes\":{}}",
          "{   \"inode\": {     \"id\": \"cmdb_workflow-3s6zgbti6cd64\",     \"schema_id\": \"cmdb_schema_workflow-0\",     \"name\": \"从 LDAP同步用户账户\"   },   \"data\": {     \"persist_level\": \"job_unit\",     \"edges\": [       {         \"from\": \"拉取LDAP用户条目\",         \"to\": \"同步用户账户\"       },       {         \"from\": \"同步用户账户\",         \"to\": \"__END__\"       },       {         \"from\": \"__START__\",         \"to\": \"获取ldap配置数据\"       },       {         \"from\": \"获取ldap配置数据\",         \"to\": \"拉取LDAP用户条目\"       }     ],     \"icon\": \"\",     \"nodes\": [       {         \"name\": \"__START__\",         \"component\": \"cmdb_component-vars\",         \"descr\": \"自定义表单\",         \"auto_run\": true,         \"settings\": {},         \"config\": {           \"schema\": \"{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{},\\\"title\\\":\\\"运行参数\\\"}\"         },         \"inputs\": {           \"*\": {}         },         \"merge\": {           \"enable\": false         }       },       {         \"name\": \"__END__\",         \"component\": \"cmdb_component-vars\",         \"descr\": \"自定义表单\",         \"auto_run\": true,         \"settings\": {},         \"config\": {           \"schema\": \"{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"result\\\":{\\\"type\\\":\\\"string\\\",\\\"title\\\":\\\"运行结果\\\"},\\\"message\\\":{\\\"type\\\":\\\"string\\\",\\\"title\\\":\\\"返回信息\\\"}},\\\"title\\\":\\\"返回数据\\\",\\\"required\\\":[\\\"result\\\",\\\"message\\\"]}\"         },         \"inputs\": {           \"同步用户账户\": {             \"message\": \"{var:同步用户账户.output.message}\",             \"result\": \"{var:同步用户账户.output.result}\"           }         },         \"merge\": {           \"enable\": false         }       },       {         \"config\": {},         \"descr\": \"LDAP-Search\",         \"inputs\": {           \"*\": {             \"attributes\": [               \"dn\"             ]           },           \"未命名节点-5\": {             \"attributes\": [               \"dn\",               \"mail\",               \"sn\",               \"cn\",               \"sAMAccountName\"             ],             \"endpoint\": \"{var:未命名节点-5.output.ldap_auth.endpoint}\",             \"enable_ssl\": \"{var:未命名节点-5.output.ldap_auth.use_ssl}\",             \"insecure_skip_verify\": \"{var:未命名节点-5.output.nsecure_skip_verify}\",             \"server_name\": \"{var:未命名节点-5.output.server_name}\",             \"base_dn\": \"{var:未命名节点-5.output.base_dn}\",             \"bind_dn\": \"{var:未命名节点-5.output.bind_dn}\",             \"bind_password\": \"{var:未命名节点-5.output.bind_password}\",             \"search_filter\": \"{var:未命名节点-5.output.user_filter}\"           },           \"获取ldap配置数据\": {             \"attributes\": [               \"dn\",               \"mail\",               \"sn\",               \"cn\",               \"sAMAccountName\",               \"objectGUID\"             ],             \"endpoint\": \"{var:获取ldap配置数据.output.endpoint}\",             \"enable_ssl\": \"{var:获取ldap配置数据.output.use_ssl}\",             \"insecure_skip_verify\": \"{var:获取ldap配置数据.output.insecure_skip_verify}\",             \"server_name\": \"{var:获取ldap配置数据.output.server_name}\",             \"base_dn\": \"{var:获取ldap配置数据.output.base_dn}\",             \"bind_dn\": \"{var:获取ldap配置数据.output.bind_dn}\",             \"bind_password\": \"{var:获取ldap配置数据.output.bind_password}\",             \"search_filter\": \"{var:获取ldap配置数据.output.user_filter}\",             \"paging_size\": 5000           }         },         \"merge\": {           \"enable\": false         },         \"name\": \"拉取LDAP用户条目\",         \"settings\": {},         \"auto_run\": true,         \"component\": \"cmdb_component-ldap_search\"       },       {         \"merge\": {           \"enable\": false         },         \"name\": \"同步用户账户\",         \"settings\": {},         \"auto_run\": true,         \"component\": \"cmdb_component-interpreter_ecmascript\",         \"config\": {           \"script\": \"// author: dengxiangyu\\n// date: 2020-10-11\\n// describe: 将 LDAP \\\"用户\\\" 同步到 \\\"用户\\\"，并自动设置 \\\"用户\\\" 相关的字段\\n\\n/*\\n此代码片段用于将 LDAP \\\"用户\\\" 同步到 \\\"用户\\\"，并自动设置 \\\"用户\\\" 相关的字段。\\n\\n要求：\\n1. \\\"用户\\\" 对象模型中必须包含以下索引字段：\\n    1.1 cmdb_index-third_party_auth\\n    1.2 cmdb_index-forbidden\\n    1.3 cmdb_index-account_username\\n    1.4 cmdb_index-sys_account\\n    1.5 cmdb_index-organizations\\n\\n输入参数：\\n{\\n    \\\"ldap_auth_id\\\": \\\"\\\",\\n    \\\"user_account_schema\\\": \\\"\\\",\\n    \\\"auto_remove_user\\\": \u003cbool\u003e,\\n    \\\"auto_create_user\\\": \u003cbool\u003e,\\n    \\\"forbidden_new_user\\\": \u003cbool\u003e,\\n    \\\"ldap_user_attributes\\\": {\\n        \\\"id\\\": \\\"\\\",\\n        \\\"name\\\": \\\"\\\",\\n        \\\"mail\\\": \\\"\\\"\\n    },\\n    \\\"default_organizations\\\": [],\\n    \\\"ldap_user_entries\\\": [{\\n        \\\"dn\\\": \\\"\\\",\\n        \\\"attributes\\\": [{\\n            \\\"name\\\": \\\"\\\",\\n            \\\"values\\\": [\\\"\\\"]\\n        }]\\n    }]\\n}\\n*/\\n\\nvar ctx = new WorkflowRuntimeContext();\\nvar input = ctx.input();\\nvar ecu = ctx.getECU();\\n\\nvar ldap_auth_id = \\\"cmdb_third_party_auth-ldap_default\\\"\\nvar auto_remove_user = true //是否根据ldap用户删除用户和用户账户模型下的数据\\nvar auto_create_user = true // 是否根据ldap用户创建用户和用户账户模型下的数据\\nvar forbidden_new_user = false // 新创建的用户是否禁用\\nvar user_account_schema = \\\"cmdb_schema_x-d97uo84ongx8\\\" // 人员模型id\\n// ldap 中的字段对应 cmdb 中的字段\\nvar ldap_user_id = \\\"sAMAccountName\\\"\\nvar ldap_user_name = \\\"cn\\\"\\nvar ldap_user_mail = \\\"mail\\\"\\nvar ldap_user_uuid = \\\"objectGUID\\\"\\nvar default_organizations = [\\\"cmdb_organization-27ucm9i0om75s\\\"]\\nvar default_roles = [\\\"cmdb_x-2m98ofjpzdlmh\\\"]\\n\\nvar output = {\\n    \\\"message\\\": \\\"同步成功\\\",\\n    \\\"result_name\\\": \\\"同步成功\\\",\\n    \\\"result\\\": \\\"SUCCEEDED\\\"\\n};\\n\\n// 获取ldap 用户列表\\nfunction fetchLdapUsers(ldap_user_entries) {\\n    var ldap_users = []\\n    ldap_user_entries.forEach(function (entry) {\\n        ldapUser = {}\\n        ldapUser.dn = entry.dn\\n        entry.attributes.forEach(function (attr) {\\n            if (!attr.values || attr.values.length == 0) {\\n                return\\n            }\\n            if (attr.name == ldap_user_id) {\\n                ldapUser.username = attr.values[0]\\n            }\\n            if (attr.name == ldap_user_name) {\\n                ldapUser.nickname = attr.values[0]\\n            }\\n            if (attr.name == ldap_user_mail) {\\n                ldapUser.mail = attr.values[0]\\n            }\\n            if (attr.name == ldap_user_uuid) {\\n                ldapUser.uuid = attr.values[0]\\n            }\\n        })\\n        ldap_users.push(ldapUser)\\n    })\\n    return ldap_users\\n}\\n\\n// 获取cmdb人员中的数据\\nfunction fetchAccount() {\\n    var user_account_dict = {}\\n    var user_account_ql = {\\n        conditions: [\\n            { field: \\\".inode.schema_id\\\", op: \\\"=\\\", value: user_account_schema },\\n            { field: \\\".indexes.cmdb_index-third_party_auth\\\", op: \\\"=\\\", value: ldap_auth_id },\\n        ],\\n        objects: [\\\"$conditions\\\"],\\n        selects: [\\n            \\\".inode.name\\\",\\n            \\\".data.email\\\",\\n            \\\".indexes.cmdb_index-third_party_auth\\\",\\n            \\\".indexes.cmdb_index-organizations\\\",\\n            \\\".indexes.cmdb_index-account_username\\\",\\n        ],\\n    }\\n    var result = ecu.queryObjects(user_account_ql)\\n    result.objects.forEach(function (object) {\\n        user_account = {}\\n        user_account.id = object.inode.id\\n        user_account.nickname = object.inode.name\\n        user_account.email = object.data.email\\n        tpa = object.indexes[\\\"cmdb_index-third_party_auth\\\"]\\n        if (tpa) {\\n            user_account.tpa = tpa.inode.id\\n        }\\n        username = object.indexes[\\\"cmdb_index-account_username\\\"]\\n        user_account.username = username ? username : \\\"\\\"\\n        user_account_dict[user_account.username] = user_account\\n    })\\n    return user_account_dict\\n}\\n\\nfunction diffAccount(ldap_users, user_account_dict) {\\n    var user_create_list = []\\n    var user_update_list = []\\n    // \\n    if (user_account_dict[\\\"misso\\\"]) {\\n        delete user_account_dict[\\\"misso\\\"]\\n    }\\n    ldap_users.forEach(function (ldap_user) {\\n\\n        var user_account = user_account_dict[ldap_user.username]\\n\\n        // 如果ldap中的用户在user_account_dict,则删除\\n        if (user_account \u0026\u0026 (ldap_user.mail == user_account.email)) {\\n            delete user_account_dict[ldap_user.username]\\n            return\\n        } else if (user_account) {\\n            var tmp = user_account_dict[ldap_user.username]\\n            tmp.email = ldap_user.mail\\n            user_update_list.push(tmp)\\n            delete user_account_dict[ldap_user.username]\\n            return\\n        }\\n\\n        // 通过人员id,构造人员和人员账户object\\n        var user_object = {\\n            inode: {\\n                name: ldap_user.nickname,\\n                schema_id: user_account_schema\\n            },\\n            data: {\\n                email: ldap_user.mail,\\n                uuid: ldap_user.uuid\\n            },\\n            indexes: {\\n                \\\"cmdb_index-third_party_auth\\\": ldap_auth_id,\\n                \\\"cmdb_index-account_username\\\": ldap_user.username,\\n                \\\"cmdb_index-organizations\\\": default_organizations,\\n                \\\"cmdb_index-forbidden\\\": forbidden_new_user\\n            }\\n        }\\n        var user_account_object = {\\n            \\\"inode\\\": {\\n                \\\"schema_id\\\": \\\"cmdb_schema_account-0\\\",\\n                \\\"id\\\": \\\"cmdb_account-v1:\\\" + ldap_user.username,\\n                \\\"name\\\": ldap_user.nickname\\n            }, // Schema\\n            \\\"data\\\": {\\n                \\\"password\\\": input.password\\n            },\\n            \\\"indexes\\\": {\\n                \\\"cmdb_index-account_username\\\": ldap_user.username,\\n                \\\"cmdb_index-third_party_auth\\\": ldap_auth_id,\\n                \\\"cmdb_index-email_address\\\": ldap_user.mail,\\n                \\\"cmdb_index-forbidden\\\": forbidden_new_user,\\n                \\\"cmdb_index-organizations\\\": default_organizations // 人员关联人员组织\\n            }\\n        }\\n\\n        var user_lists = [user_object, user_account_object]\\n        user_create_list.push(user_lists)\\n    })\\n\\n\\n    // 如果user_account_dict有内容,则删除对应的人员和人员账户\\n    var user_remove_list = []\\n    for (user_id in user_account_dict) {\\n        var user_account = user_account_dict[user_id]\\n        user_remove_list.push(user_account.id)\\n    }\\n\\n    output[\\\"user_remove_list\\\"] = user_remove_list\\n    output[\\\"user_create_list\\\"] = user_create_list\\n    if (auto_remove_user \u0026\u0026 user_remove_list.length \u003e 0) {\\n        removeUser(user_remove_list)\\n    }\\n\\n    if (auto_create_user \u0026\u0026 user_create_list.length \u003e 0) {\\n        addUser(user_create_list)\\n    }\\n\\n    if (auto_create_user \u0026\u0026 user_update_list.length \u003e 0) {\\n        updateUser(user_update_list)\\n    }\\n}\\n\\n\\n\\n\\nfunction updateUser(user_update_list) {\\n    user_update_list.forEach(function (element) {\\n        id = element[\\\"id\\\"]\\n        email = element[\\\"email\\\"]\\n        var result = ctx.ecu.ql.queryQlTable(\\n            {\\n                \\\"objects\\\": [id],\\n                \\\"selects\\\": [\\\".\\\"]\\n            }\\n        )\\n        output[\\\"updateUser\\\"] = result\\n        var account_id = result[\\\"rows\\\"][0][\\\"data\\\"][1][\\\"indexes\\\"][\\\"cmdb_index-sys_account\\\"]\\n        output[\\\"account_id\\\"] = account_id\\n\\n        // 人员账户id\\n        ctx.ecu.cmdb.updateObjects(\\n            {\\n                \\\"objects\\\": [id]\\n            },\\n            {\\n                \\\"object\\\": {\\n                    \\\"data\\\": {\\n                        \\\"email\\\": email\\n                    }\\n                },\\n                \\\"updates\\\": [\\\"data.email\\\"]\\n            }\\n        )\\n        ctx.ecu.cmdb.updateObjects(\\n            {\\n                \\\"objects\\\": [account_id]\\n            },\\n            {\\n                \\\"object\\\": {\\n                    \\\"indexes\\\": {\\n                        \\\"cmdb_index-email_address\\\": email\\n                    }\\n                },\\n                \\\"updates\\\": [\\\"indexes.cmdb_index-email_address\\\"]\\n            }\\n        )\\n    })\\n}\\n\\nfunction addUser(user_create_list) {\\n    user_create_list.forEach(function (user) {\\n        var user_object = user[0]\\n        var user_accout_object = user[1]\\n        var name = user_object.inode.name\\n        var res = ctx.ecu.cmdb.createObjects([user_accout_object])\\n        var user_account_id = res.objects[0] // 人员账户\\n        user_object[\\\"indexes\\\"][\\\"cmdb_index-sys_account\\\"] = user_account_id \\n        var res = ctx.ecu.cmdb.createObjects([user_object])\\n        var user_id = res.objects[0]\\n        // 用户配置\\n        var user_config_object = {\\n            \\\"inode\\\": {\\n                \\\"schema_id\\\": \\\"cmdb_schema_x-3pmf2v3beupg4\\\",\\n                \\\"name\\\": name\\n            }, // Schema\\n            \\\"indexes\\\": {\\n                \\\"cmdb_index-37e2ysb2p4qrf\\\": user_id,\\n                \\\"cmdb_index-3ufxmib5lgra3\\\": default_roles\\n            }\\n        }\\n        ctx.ecu.cmdb.createObjects([user_config_object])\\n    })\\n}\\n\\nfunction removeUser(user_remove_list) {\\n    // 查询人员对应的人员账户\\n    var res = ctx.ecu.ql.queryQlTable(\\n        {\\n            \\\"objects\\\": user_remove_list,\\n            \\\"conditions\\\": [\\n\\n                {\\n                    \\\"field\\\": \\\"inode.name\\\",\\n                    \\\"op\\\": \\\"=-\\\",\\n                    \\\"value\\\": user_remove_list\\n                }\\n            ],\\n            \\\"selects\\\": [\\\".\\\"]\\n        }\\n    )\\n    if (res.rows.length \u003e 0) {\\n        res.rows.forEach(function (obj) {\\n            var user_account_id = obj.data[1][\\\"indexes\\\"][\\\"cmdb_index-account_username\\\"]\\n            if (user_account_id) {\\n                user_remove_list.push(user_account_id)\\n            }\\n        })\\n    }\\n\\n    // 删除人员及人员账户\\n    var archive_query = {\\n        conditions: [{\\n            field: \\\".inode.schema_id\\\", op: \\\"=\\\", value: user_account_schema,\\n        }],\\n        objects: user_remove_list,\\n    }\\n    var user_account_update = {\\n        object: {\\n            inode: { archived: true },\\n        },\\n        updates: [\\\".inode.archived\\\"],\\n    }\\n    ecu.updateObjects(archive_query, user_account_update)\\n}\\n\\nfunction main() {\\n    var ldap_user_entries = input.ldap_user_entries\\n    var ldap_users = fetchLdapUsers(ldap_user_entries)\\n    var user_account_dict = fetchAccount()\\n    diffAccount(ldap_users, user_account_dict)\\n}\\n\\ntry {\\n    main()\\n} catch (e) {\\n    output.result = \\\"FAILED\\\",\\n        output.result_name = \\\"同步失败\\\",\\n        output.message = e.message\\n}\\nctx.output(output)\",           \"input_schema\": \"{\\\"type\\\":\\\"object\\\",\\\"title\\\":\\\"运行参数\\\",\\\"properties\\\":{\\\"ldap_user_entries\\\":{\\\"type\\\":\\\"array\\\",\\\"items\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"dn\\\":{\\\"type\\\":\\\"string\\\"},\\\"attributes\\\":{\\\"type\\\":\\\"array\\\",\\\"items\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"name\\\":{\\\"type\\\":\\\"string\\\"},\\\"values\\\":{\\\"type\\\":\\\"array\\\",\\\"items\\\":{\\\"type\\\":\\\"string\\\"}}},\\\"required\\\":[\\\"name\\\",\\\"values\\\"]}}},\\\"required\\\":[\\\"dn\\\",\\\"attributes\\\"]},\\\"title\\\":\\\"LDAP用户条目\\\"}},\\\"required\\\":[\\\"ldap_user_entries\\\"]}\",           \"output_schema\": \"{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"result\\\":{\\\"type\\\":\\\"string\\\",\\\"title\\\":\\\"运行结果\\\"},\\\"message\\\":{\\\"type\\\":\\\"string\\\",\\\"title\\\":\\\"返回信息\\\"}},\\\"title\\\":\\\"返回数据\\\",\\\"required\\\":[\\\"result\\\",\\\"message\\\"]}\",           \"timeout_s\": 30         },         \"descr\": \"ES2015 解析组件\",         \"inputs\": {           \"拉取LDAP用户条目\": {             \"ldap_auth_id\": \"{var:__START__.output.ldap_auth_id}\",             \"ldap_user_attributes\": {               \"email\": \"email\",               \"id\": \"cn\",               \"mail\": \"mail\",               \"name\": \"cn\"             },             \"ldap_user_entries\": \"{var:拉取LDAP用户条目.output.entries}\",             \"user_account_schema\": \"{var:__START__.output.user_account_schema}\",             \"auto_create_user\": true,             \"auto_remove_user\": true,             \"forbidden_new_user\": true           }         }       },       {         \"name\": \"获取ldap配置数据\",         \"component\": \"cmdb_component-interpreter_ecmascript\",         \"descr\": \"ES2015 解析组件\",         \"auto_run\": true,         \"settings\": {},         \"config\": {           \"script\": \"// WorkflowRuntimeContext 类型对象暴露 workflow 运行时方法\\nvar ctx = new WorkflowRuntimeContext()\\nvar input = ctx.input() // 获取input数据\\n\\n\\nvar tpa_id = \\\"cmdb_third_party_auth-ldap_default\\\"\\n\\nvar output = {\\n    \\\"message\\\": \\\"读取ldap配置成功\\\",\\n    \\\"result\\\":\\\"SUCCEEDED\\\",\\n    \\\"result_name\\\":\\\"读取ldap配置成功\\\"\\n}\\n\\nfunction queryTpa() {\\n    var res = ctx.ecu.ql.queryQlTable(\\n        {\\n            \\\"objects\\\": [tpa_id],\\n            \\\"conditions\\\": [\\n\\n                {\\n                    \\\"field\\\": \\\"inode.id\\\",\\n                    \\\"op\\\": \\\"=\\\",\\n                    \\\"value\\\": tpa_id\\n                }\\n            ],\\n            \\\"selects\\\": [\\\".\\\"]\\n        }\\n    )\\n    if (res.rows.length === 0) {\\n        throw {\\\"message\\\": \\\"查询不到 默认LDAP认证\\\"}\\n    }\\n    var obj = res.rows[0][\\\"data\\\"][1]\\n    output.endpoint = obj.data.ldap_auth.endpoint\\n    output.use_ssl = obj.data.ldap_auth.use_ssl ? obj.data.ldap_auth.use_ssl : false\\n    output.server_name = obj.data.ldap_auth.server_name ? obj.data.ldap_auth.server_name : \\\"\\\"\\n    output.base_dn = obj.data.ldap_auth.base_dn\\n    output.bind_dn = obj.data.ldap_auth.bind_dn\\n    output.bind_password = obj.data.ldap_auth.bind_password\\n    output.user_filter = \\\"(\u0026(objectCategory=Person)(sAMAccountName=*))\\\"\\n    output.insecure_skip_verify = obj.data.insecure_skip_verify ? obj.data.insecure_skip_verify : false\\n}\\n\\n \\nfunction main() {\\n    queryTpa()\\n}\\n\\ntry {\\n    main()\\n} catch(e) {\\n    output.message = e.message\\n    output.result = \\\"FAILED\\\"\\n    output.result_name = \\\"获取信息失败\\\"\\n}\\n\\nctx.output(output) //输出\\n\",           \"input_schema\": \"{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{}}\",           \"output_schema\": \"{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"endpoint\\\":{\\\"type\\\":\\\"string\\\"},\\\"use_ssl\\\":{\\\"type\\\":\\\"boolean\\\"},\\\"server_name\\\":{\\\"type\\\":\\\"string\\\"},\\\"base_dn\\\":{\\\"type\\\":\\\"string\\\"},\\\"bind_dn\\\":{\\\"type\\\":\\\"string\\\"},\\\"bind_password\\\":{\\\"type\\\":\\\"string\\\"},\\\"user_filter\\\":{\\\"type\\\":\\\"string\\\"},\\\"insecure_skip_verify\\\":{\\\"type\\\":\\\"boolean\\\"}},\\\"required\\\":[]}\"         },         \"merge\": {           \"enable\": false         },         \"inputs\": {           \"__START__\": {}         }       }     ]   },   \"indexes\": {} }",
          "{   \"inode\": {     \"id\": \"cmdb_workflow-293836cmtc2vf\",     \"schema_id\": \"cmdb_schema_workflow-0\",     \"name\": \"[系统/定时] 新执行 LDAP 用户同步\"   },   \"data\": {     \"icon\": \"\",     \"nodes\": [       {         \"name\": \"__START__\",         \"component\": \"cmdb_component-vars\",         \"descr\": \"自定义表单\",         \"auto_run\": true,         \"settings\": {},         \"config\": {}       },       {         \"name\": \"__END__\",         \"component\": \"cmdb_component-vars\",         \"descr\": \"自定义表单\",         \"auto_run\": true,         \"settings\": {},         \"config\": {}       },       {         \"name\": \"从LDAP同步用户账户\",         \"component\": \"cmdb_component-workflow\",         \"descr\": \"派生 Workflow\",         \"auto_run\": true,         \"settings\": {},         \"config\": {           \"id\": \"cmdb_workflow-3s6zgbti6cd64\"         },         \"merge\": {           \"enable\": false         },         \"inputs\": {           \"*\": {},           \"未命名节点-4\": {}         }       },       {         \"name\": \"未命名节点-4\",         \"component\": \"cmdb_component-ticker\",         \"descr\": \"固定时间间隔执行\",         \"auto_run\": true,         \"settings\": {},         \"config\": {},         \"merge\": {           \"enable\": false         },         \"inputs\": {           \"*\": {             \"interval_s\": 300,             \"times\": -1           },           \"__START__\": {             \"interval_s\": 300,             \"times\": -1           }         }       }     ],     \"edges\": [       {         \"from\": \"__START__\",         \"to\": \"未命名节点-4\"       },       {         \"from\": \"未命名节点-4\",         \"to\": \"从LDAP同步用户账户\"       }     ],     \"persist_level\": \"job_unit\",     \"persist_retention\": 3600   },   \"indexes\": {} }"
        ]
      },
      "output": {
        "output": {}
      },
      "__trigger__": {}
    },
    "children": {},
    "childrenConfig": []
  },
  "indexes": {
    "cmdb_index-mpage_children": [],
    "cmdb_index-mpage_component": "cmdb_mcomponent-wf",
    "cmdb_index-mpage_component_type": "WORKFLOW"
  }
}